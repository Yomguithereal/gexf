/* gexf-writer.js - Gexf writer for JavaScript. - Version: 0.2.0 - Author: Guillaume Plique - medialab SciencesPo */
(function(){"use strict";function e(e,t){switch(e){case"boolean":case"integer":case"long":case"float":case"double":return""+t;case"liststring":if(t instanceof Array)return t.join("|")}if("object"==typeof t)throw Error("gexf.writer.cast: trying to cast an object to a string.");return t}function t(e){var t=[0,0,0];return e.match(/^#/)?(e=(e||"").replace(/^#/,""),t=3===e.length?[parseInt(e.charAt(0)+e.charAt(0),16),parseInt(e.charAt(1)+e.charAt(1),16),parseInt(e.charAt(2)+e.charAt(2),16)]:[parseInt(e.charAt(0)+e.charAt(1),16),parseInt(e.charAt(2)+e.charAt(3),16),parseInt(e.charAt(4)+e.charAt(5),16)]):e.match(/^ *rgba? *\(/)&&(e=e.match(/^ *rgba? *\( *([0-9]*) *, *([0-9]*) *, *([0-9]*) *(,.*)?\) *$/),t=[+e[1],+e[2],+e[3]],e[4]&&t.push(+e[4].replace(", ",""))),t}function i(e){e=e||{};var t=e.implementation||document.implementation;this.document=t.createDocument("http://www.gexf.net/1.2draft","gexf",null),this.root=this.document.documentElement,this.xmlns=e.namespace||"http://www.gexf.net/1.2draft",this.root.setAttribute("xmlns",this.xmlns),this.root.setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance"),this.root.setAttribute("xsi:schemaLocation","http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd"),this.root.setAttribute("version",e.version||"1.2"),this.encoding=e.encoding||"UTF-8",e.meta&&this.setMeta(e.meta),this.graph=this.createElement("graph",{defaultedgetype:e.defaultEdgeType||"undirected",mode:e.mode}),this.root.appendChild(this.graph),this.models={node:{},edge:{}},e.models&&e.models.node&&this.setNodeModel(e.models.node),e.models&&e.models.edge&&this.setEdgeModel(e.models.edge),this.nodes=this.createElement("nodes"),this.edges=this.createElement("edges"),this.graph.appendChild(this.nodes),this.graph.appendChild(this.edges);var i,r;if(e.nodes)for(i=0,r=e.nodes.length;r>i;i++)this.addNode(e.nodes[i]);if(e.edges)for(i=0,r=e.edges.length;r>i;i++)this.addEdge(e.edges[i]);console.log(this.document)}function r(e){return new i(e)}i.prototype.createElement=function(e,t,i){if(!e)throw Error("gexf.writer.createElement: wrong arguments.");"object"==typeof t&&(i=t,t=null);var r=this.document.createElement(e);if(t){var n=this.document.createTextNode(t);r.appendChild(n)}if(i)for(var o in i)"undefined"!=typeof i[o]&&null!==i[o]&&r.setAttribute(o,i[o]);return r},i.prototype.setMeta=function(e){e=e||{};var t,i=this.document.createElement("meta");for(t in e)"lastmodifieddate"===t?i.setAttribute("lastmodifieddate",e[t]):i.appendChild(this.createElement(t,e[t]));return this.root.appendChild(i),this},i.prototype.setModel=function(e,t){if("node"!==e&&"edge"!==e)throw Error('gexf.writer.setModel: wrong model type "'+e+'"');if(!(t instanceof Array))throw Error("gexf.writer.setModel: model is not a valid array.");var i,r,n,o=this.createElement("attributes",{"class":e});for(r=0,n=t.length;n>r;r++){i=t[r],this.models[e][i.id]=i;var a=this.createElement("attribute",{id:i.id,title:i.title,type:i.type});if("undefined"!=typeof i.defaultValue){var d=this.createElement("default",i.defaultValue);a.appendChild(d)}o.appendChild(a)}return this.graph.appendChild(o),this},i.prototype.setNodeModel=function(e){return this.setModel("node",e)},i.prototype.setEdgeModel=function(e){return this.setModel("edge",e)},i.prototype.addNode=function(i){var r,n,o;if("undefined"==typeof i.id||null===i.id)throw Error("gexf.writer.addNode: inexistent id.");var a=this.createElement("node",{id:i.id,label:i.label});if(i.attributes&&Object.keys(i.attributes).length>0){var d=this.createElement("attvalues");for(r in i.attributes||{}){if(n=i.attributes[r],o=this.models.node[r],!o)throw Error('gexf.writer.addNode: property "'+o+'" not registered in node model.');var s=this.createElement("attvalue",{"for":o.id,value:e(o.type,n)});d.appendChild(s)}a.appendChild(d)}if(i.viz){if(i.viz.color){var h=t(i.viz.color),l=this.createElement("viz:color",{r:h[0],g:h[1],b:h[2],a:h[3]});a.appendChild(l)}if(i.viz.position){var p=this.createElement("viz:position",{x:i.viz.position.x,y:i.viz.position.y,z:i.viz.position.z});a.appendChild(p)}if(i.viz.size){var c=this.createElement("viz:size",{value:i.viz.size});a.appendChild(c)}if(i.viz.shape){var f=this.createElement("viz:shape",{value:i.viz.shape});a.appendChild(f)}}return this.nodes.appendChild(a),this},i.prototype.addEdge=function(i){var r,n,o;if("undefined"==typeof i.id||null===i.id)throw Error("gexf.writer.addEdge: inexistent id.");var a=this.createElement("edge",{id:i.id,label:i.label,weigth:i.weight,type:i.type,source:i.source,target:i.target});if(i.attributes&&Object.keys(i.attributes).length>0){var d=this.createElement("attvalues");for(r in i.attributes||{}){if(n=i.attributes[r],o=this.models.edge[r],!o)throw Error('gexf.writer.addEdge: property "'+o+'" not registered in edge model.');var s=this.createElement("attvalue",{"for":o.id,value:e(o.type,n)});d.appendChild(s)}a.appendChild(d)}if(i.viz){if(i.viz.color){var h=t(i.viz.color),l=this.createElement("viz:color",{r:h[0],g:h[1],b:h[2],a:h[3]});a.appendChild(l)}if(i.viz.shape){var p=this.createElement("viz:shape",{value:i.viz.shape});a.appendChild(p)}if(i.viz.thickness){var c=this.createElement("viz:thickness",{value:i.viz.shape});a.appendChild(c)}}return this.edges.appendChild(a),this},i.prototype.export=function(){return'<?xml version="1.0" encoding="'+this.encoding+'"?>\n'+this.root.outerHTML};var n={create:r,version:"0.2.0"};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=n),exports.gexf=n):"function"==typeof define&&define.amd?define("gexf",[],function(){return n}):"undefined"!=typeof this.gexf?this.gexf.create=r:this.gexf=n}).call(this);